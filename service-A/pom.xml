<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- Parent -->
  <parent>
    <artifactId>spring-boot-starter-parent</artifactId>
    <groupId>org.springframework.boot</groupId>
    <relativePath/> <!-- lookup parent from repository -->
    <version>2.4.11</version>
  </parent>

  <!-- Prodject information -->
  <groupId>io.codebyexample</groupId>
  <artifactId>service-A</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>Service A</name>


  <properties>
    <spring-cloud.version>2020.0.4</spring-cloud.version>

    <net.devh.grpc.starter.version>2.12.0.RELEASE</net.devh.grpc.starter.version>
    <io.grpc.version>1.37.0</io.grpc.version>
    <com.google.api.grpc.version>1.18.0</com.google.api.grpc.version>
    <com.google.protobuf.version>3.7.1</com.google.protobuf.version>

    <kr.motd.maven.version>1.5.0.Final</kr.motd.maven.version>
    <org.xolstice.maven.plugins.version>0.6.1</org.xolstice.maven.plugins.version>

<!--    <jacoco.version>0.8.3</jacoco.version>-->
<!--    <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>-->
<!--    <sonar.exclusions>**/*.xml,-->
<!--                      **/*Enum.java,-->
<!--                      **/*Entity.java,-->
<!--                      **/*Config.java,-->
<!--                      **/*Exception.java,-->
<!--                      **/core/**/*-->
<!--    </sonar.exclusions>-->
<!--    <sonar.jacoco.reportPaths>${basedir}/target/coverage-reports/jacoco-unit.exec</sonar.jacoco.reportPaths>-->
<!--    <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>-->
<!--    <sonar.language>java</sonar.language>-->
<!--    <sonar.scm.provider>git</sonar.scm.provider>-->
<!--    <qpid-broker.version>7.0.2</qpid-broker.version>-->

    <java.version>1.8</java.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!--  gRPC service  -->
    <dependency>
      <groupId>net.devh</groupId>
      <artifactId>grpc-client-spring-boot-starter</artifactId>
      <version>${net.devh.grpc.starter.version}</version>
    </dependency>

    <!-- google.protobuf -->
    <dependency>
      <groupId>com.google.api.grpc</groupId>
      <artifactId>proto-google-common-protos</artifactId>
      <version>${com.google.api.grpc.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java-util</artifactId>
      <version>${com.google.protobuf.version}</version>
    </dependency>

    <!--Messaging-->
    <dependency>
      <artifactId>spring-kafka</artifactId>
      <groupId>org.springframework.kafka</groupId>
    </dependency>

    <!--Actuator  -->
    <dependency>
      <artifactId>spring-boot-starter-actuator</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>

    <!--  spring cloud sleuth  -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-sleuth</artifactId>
    </dependency>
    <dependency>
      <groupId>io.zipkin.brave</groupId>
      <artifactId>brave-instrumentation-grpc</artifactId>
    </dependency>
<!--    <dependency>-->
<!--      <groupId>io.zipkin.brave</groupId>-->
<!--      <artifactId>brave-instrumentation-kafka-streams</artifactId>-->
<!--    </dependency>-->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-sleuth-zipkin</artifactId>
    </dependency>

    <!--  Lombok  -->
    <dependency>
      <artifactId>lombok</artifactId>
      <groupId>org.projectlombok</groupId>
      <optional>true</optional>
    </dependency>

    <!--  Test  -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!-- Build Settings -->
  <build>
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>${kr.motd.maven.version}</version>
      </extension>
    </extensions>
    <plugins>
      <plugin>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <!--     To expose build info in actuator     -->
          <execution>
            <goals>
              <goal>build-info</goal>
            </goals>
          </execution>
        </executions>
        <groupId>org.springframework.boot</groupId>
      </plugin>

      <!--   gRPC compilation   -->
      <plugin>
        <groupId>org.xolstice.maven.plugins</groupId>
        <artifactId>protobuf-maven-plugin</artifactId>
        <version>${org.xolstice.maven.plugins.version}</version>
        <configuration>
          <pluginArtifact>
            io.grpc:protoc-gen-grpc-java:${io.grpc.version}:exe:${os.detected.classifier}
          </pluginArtifact>
          <pluginId>grpc-java</pluginId>
          <protoSourceRoot>src/main/protos</protoSourceRoot>
          <protocArtifact>
            com.google.protobuf:protoc:${com.google.protobuf.version}:exe:${os.detected.classifier}
          </protocArtifact>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>compile-custom</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>